<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="BackgroundWorker1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAYAAAAAACoDAAAFgAAACgAAAAgAAAAQAAAAAEAGAAAAAAAAAwAAAAAAAAAAAAAAAAAAAAA
        AAAmJiYmJiYmJiYmJiYmJiYmJiYlJiYlJCQlJSUjJiUiICAhHB4eGBoXMy0JoHUaKiYZOzIKg14ZIyEb
        FhgdGhwfISAiIiIkIyMlJSUmJiYlJSUmJiYmJiYmJiYmJiYmJiYmJiYmJiYmJiYmJiYmJiYmJiYkJCQl
        JiYkIyQjFx0dIyIVRzYIpHEA+KMA/6wXKCMXOTAA04UBtHIMX0IUJB8bFRkeHB0hIiIkJCQmJiYlJSUm
        JiYmJiYmJiYmJiYmJiYmJiYmJiYmJiYmJiYmJiYmJiYlJSUlJCUjJCMXVzwJrHAA/p4A/6gA/aUA/asX
        KSMXOTAA0IUAxHkAynYDpGIPTzQZHBofHh8kJCMmJiYlJSUmJiYmJiYmJiYmJiYmJiYmJiYmJiYmJiYm
        JiYmJiYmJiYlJiYmICMgMSoA/5YA/50A/Z0A/KMA/KYA+akYKSQYOjEAzoUAw3oAwHMAwm4AzWwUNCUf
        FhojJCQmJiYlJSUmJiYmJiYmJiYmJiYmJiYmJiYmJiYmJiYmJiYlJSUmJiYlJSUlICIgMysA/JcA+ZcA
        +54A+aMA/6oA/7YaLigYQDYA2o0AwnsAwnUAvW4AyGwTNCQeFRkiIyQmJiYlJSUmJiYmJiYmJiYmJiYm
        JiYmJiYmJiYlJSUmJiYmJiYlJSUkJSYmICMhMysA/JgA/psA/6cA/68C5JsLoXUbHRwbJSMImmsAzYIA
        yXoAvW4Aym4VNiUgFhojJCQlJSUlJSUlJSUmJiYmJiYmJiYmJiYmJiYmJiYmJiYmJiYlJSUmJiYlJiUl
        HyIgNCwA/6AB65MKom8SXUUXMCgZGRwSTT8VMiwZGRoSTTkGoGcAx3UAzXIXOCkhFxskJSMmJiYkJCQm
        JiYmJiYmJiYmJiYmJiYmJiYmJiYlJSUmJiYkJCQkJCQkJSQkISIhKicVYkgbLCYZHx0VODAMh2AD1ZUB
        5aQBv4UKb08WHR0XHBsSTzoBtmoYPS0jGR0jJSQlJSUlJSUlJSUmJiYmJiYmJiYmJiYmJiYlJSUlJSUl
        JCQjJSQjJCQiGh4gGx4fHx4ZOi4Of1gD0YgA+6gA/68A/7YA9KwA0pEA0YwBtncMWUAWHBwYIh8dIB8h
        ISEiIyMjJCQkJCQkJCQmJiYlJSUmJiYmJiYmJiYkJCQmJSUkJiUjGx8hGB0aMCYRakgYMCcA/58A/6QA
        /6kA/6wA/q4A/rIA76oAz5AAzosAzIcAz4ICp2kPSzUYGhoeFhohHB4hJCIiIyIkJCQmJiYkJCQmJiYm
        JiYmJiYlJSUlJyYlIiMfNisRek0D2HwA/5YUMCUA/p8A/aIA/qcA/6wA/a8A/7QA8K0Az5IAzo0Ay4cA
        x4EAx3sA1H0SMiUTSDAXLCQdEhcdGxwjIyMmJSUlJSUmJiYmJiYmJiYlJSUkKigoDxoRjVYA/5wA/5IA
        9JATLyQA/6EA/qMA/qgA/60A/rAA/7UA8K4A0JMAz44Ay4kAyYMAw3sA0H0TLiMAsmEFmVUOUDIWIx0h
        HyAmJyYlJSUmJiYmJiYmJiYlJSUlKicnDRkPk1kA+ZgA948A+ZQUMCQA/6MA/qQA/6oA/68A/rIA/7YA
        8K8A0ZYAz5EAzIoAyoQAxX4A0n8TLiQCp18AyW0AxWcKZzwgEhkmKiglJSUmJiYmJiYmJiYlJSUlKigo
        DhgQklkA/5sA+pIA+JUUMCUA/6QA/qUA/6sA/7AA/rMA/7cA8LAA0ZcA0JIAzY0Ay4cAxYAA1IITLyMC
        q2MAvmsAymwGhUkhDRYmKyklJSUmJiYmJiYmJiYlJSUlKygoDhkQk1oA/54A+pQA+ZcUMCYA/6YA/qYA
        /6wA/7EA/rQA/7kA77EA0pkA0ZQAzo8AzIkAxoEA1YQTLyQCrGUAwm4AyW4Hf0ghDhcmKiglJSUmJiYm
        JiYmJiYlJSUlKygoDhkPklwA/6AA+pYA+ZkTLyUA/6cA/qkA/64A/7IA/rUA/7oA8LIA05sA0pYAzpAA
        zIoAx4MA1YYTLyUCrWYAw3AAy3EGgUogDRYmKyklJSUmJiYmJiYmJiYlJSUlKigoDRkQk10A/6MA+pgA
        +ZoUMCYA/6kA/qoA/7AA/7QA/rcA/7wA8bMA1J0A0pcA0JIAzo0AyIYA14oSLiQBrmkAxHMAzXQHg0wh
        DRYlKyglJSUmJiYmJiYmJiYlJSUlKicnDhkRkV4A+qEA9pgA9psVMScA/qoA/qsA/rEA/rUA/rgA/70A
        8LQA1J4A05kA0ZQAz48AyYgA2IwTLyUCrmoAw3QAzHUIgk0iDhcmKiklJSUmJiYmJiYmJiYlJSUkKygo
        DRgQmmMA/64A/6EA/aEXMyoA/KoA+KgA+q4A+rMA+rYA/LwA8LUA1J8A0pkAzpQAy44AxYcA1owVMScC
        sW0AynoA130HjFUkDhclKyglJSUmJiYmJiYmJiYkJCQlKCcnGh4aXUMMsXUHyYAE3pAbNi4A/7IA/7wA
        /78A/8EA/8EA/8IA+70A2aMA2qAA254A3ZsA25YA4ZUZNSwEq2wDsm8GpWQRaEQlFx0lKSYlJSUmJiYm
        JiYmJiYlJSUlJCUlJyYlGx8jISEgOzEcUD4iKigVclQRhmIMnXQJsIMHxJQD2qUB8LYBypkFs4cInXQL
        iGQPcVMRY0gfKCUaTDoaRDUeMysiJiQkJCQmJiUkJCQmJiYmJiYmJiYmJiYlJSUmJSUlKCclJiYlISIn
        HCAmIyQlEhkiChEfBg0aFRYYIyAXNC0WQjcWODAYKSUZGxsbCxAcCA4fDhQgHh8kGx8mHiElISMlJSUl
        JSUlJiYlJSUmJiYmJiYmJiYlJSUmJiYlJSUmJiYmJiYkJiUkKSgmGx8dSDsE36YGv4wInncLe18QVkYR
        Sj4QUUMNbFYIhWYFnHMDw4oRSTkfExYiJyUlKCckJiUlJiYmJSYmJiYmJiYmJiYmJiYmJiYmJiYlJSUm
        JiYlJSUlJSUlJSUkJycnGR0bSjwA/8cA/7wA/78A/r8A+sAA26sA1aYA2aQA2aEA1ZwA7acQUD0fDhMi
        JSQlJSUkJCQlJSUlJSUmJiYlJSUmJiYmJiYmJiYmJiYmJiYmJiYmJiYmJiYlJSUlJiYmGh4cSDsA/b8A
        +LYA/70A/8EA/8YA4bAA2qoA2aYA1qAAzpgA46IRTTseDxQhJCMmJiYlJSUmJiYmJiYmJiYmJiYmJiYm
        JiYmJiYmJiYmJiYmJiYmJiYmJiYlJSUlJycnGh4bSDsA/8EA+bgA/r4A/cAA/sQA3rAA2KkA2KcA1qEA
        z5kA5aQRTjweDhMhJCMmJiYlJSUmJiYmJiYmJiYmJiYmJiYmJiYmJiYmJiYmJiYmJiYmJiYmJiYlJSUl
        JycnGh4cSTwA/sIA+rkA/r8A/sIA/8YA37EA2asA2agA1qMA0JoA5aYQTj0fDxQiJSQmJiYlJSUmJiYm
        JiYmJiYmJiYmJiYmJiYmJiYmJiYmJiYmJiYmJiYmJiYlJSUlJiYmGh4dSTwA+cEA9rYA/b8A/sMA/sUA
        4LIA2qwA2qkA16QAzZoA4qUSTz4gERUjJiQlJSUlJSUmJiYmJiYmJiYmJiYmJiYmJiYmJiYmJiYmJiYm
        JiYmJiYmJiYlJSUkJycnGh0dST0A/8oA/8IA/cAA+8EA/cYA4LMA2qwA16gA1qQA2aMA8K4UVEMjExcj
        JiUmJiYkJCQmJiYmJiYmJiYmJiYmJiYmJiYmJiYmJiYmJiYmJiYmJiYmJiYkJCQlJiYlIyQjKigYZ1EL
        sYcA+r4A/80A/8gA37MA3q8A5LIA1KIJlnQUXkofKygkISIkJSUlJSUlJSUmJiYmJiYmJiYmJiYmJiYm
        JiYmJiYmJiYmJiYmJiYmJiYmJiYlJSUlJSUlJiYlIiMlGR0jLCkdSD0Rim8D4rMA4rUFtJARblocOzQg
        KickGx0lISIjJSQlJCQlJSUlJSUmJiYmJiYmJiYmJiYmJiYmJiYmJiYmJiYmJiYmJiYmJiYmJiYmJiYl
        JSUmJSUlJiYkKCcnHyEnFholICEfOjQXYlIfLywkHR8mFhomHyEkJyYlJyYkJCQlJSUmJiYlJSUmJiYm
        JiYmJiYmJiYmJiYmJiYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
</value>
  </data>
</root>